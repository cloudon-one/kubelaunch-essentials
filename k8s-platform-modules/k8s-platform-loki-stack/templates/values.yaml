loki:
  enabled: true
  serviceAccount:
    create: true
    name: ${service_account}
  
  persistence:
    enabled: true
    storageClassName: ${storage_class_name}
    size: ${storage_size}

  config:
    auth_enabled: true
    storage_config:
      aws:
        s3: s3://${s3_region}/${s3_bucket_name}
        region: ${s3_region}
      filesystem:
        directory: /data/loki/chunks
    schema_config:
      configs:
        - from: 2020-07-01
          store: boltdb-shipper
          object_store: aws
          schema: v11
          index:
            prefix: loki_index_
            period: 24h
    table_manager:
      retention_deletes_enabled: true
      retention_period: ${retention_period}
  
  resources:
    requests:
      cpu: ${resources.loki.requests.cpu}
      memory: ${resources.loki.requests.memory}
    limits:
      cpu: ${resources.loki.limits.cpu}
      memory: ${resources.loki.limits.memory}

promtail:
  enabled: ${promtail_enabled}
  serviceAccount:
    create: true
    name: ${service_account}
  
  config:
    snippets:
      extraScrapeConfigs: |
        ${additional_scrape_configs}
  
  resources:
    requests:
      cpu: ${resources.promtail.requests.cpu}
      memory: ${resources.promtail.requests.memory}
    limits:
      cpu: ${resources.promtail.limits.cpu}
      memory: ${resources.promtail.limits.memory}

grafana:
  enabled: ${grafana_enabled}
  
  sidecar:
    datasources:
      enabled: true
      
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          url: http://{{ .Release.Name }}-loki:3100
          access: proxy
          isDefault: true

ingress:
  enabled: ${ingress_enabled}
  %{ if ingress_enabled }
  hosts:
    - host: ${ingress_host}
      paths:
        - path: /
          pathType: Prefix
  annotations: ${jsonencode(ingress_annotations)}
  %{ endif }